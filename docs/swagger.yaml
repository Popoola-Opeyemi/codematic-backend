basePath: /
definitions:
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
      tenant_slug:
        type: string
    required:
    - email
    - password
    - tenant_slug
    type: object
  auth.SignupRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 8
        type: string
      phone:
        type: string
      tenant_slug:
        type: string
      username:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone
    - tenant_slug
    - username
    type: object
  model.ErrorResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  tenants.CreateTenantRequest:
    properties:
      id:
        type: string
      slug:
        type: string
    required:
    - id
    - slug
    type: object
  tenants.Tenant:
    properties:
      id:
        type: string
      name:
        type: string
      slug:
        type: string
    type: object
host: localhost:9082
info:
  contact:
    email: code.popoola@gmail.com
    name: API Support
  description: This is the Codematic API documentation.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Codematic API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns tokens
      parameters:
      - description: Login request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Login a user
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Creates a new user account
      parameters:
      - description: Signup request
        in: body
        name: signupRequest
        required: true
        schema:
          $ref: '#/definitions/auth.SignupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /tenant:
    get:
      description: List all tenants
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tenants.Tenant'
            type: array
      summary: List tenants
      tags:
      - tenants
  /tenant/{id}:
    delete:
      description: Delete tenant by ID
      parameters:
      - description: Tenant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Delete tenant
      tags:
      - tenants
    get:
      description: Get tenant by ID
      parameters:
      - description: Tenant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tenants.Tenant'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get tenant by ID
      tags:
      - tenants
    put:
      consumes:
      - application/json
      description: Update tenant by ID
      parameters:
      - description: Tenant ID
        in: path
        name: id
        required: true
        type: string
      - description: Tenant update payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/tenants.CreateTenantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tenants.Tenant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Update tenant
      tags:
      - tenants
  /tenant/create:
    post:
      consumes:
      - application/json
      description: Creates a new Tenant
      parameters:
      - description: Tenant creation payload
        in: body
        name: tenantsCreateRequest
        required: true
        schema:
          $ref: '#/definitions/tenants.CreateTenantRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/tenants.Tenant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Creates a new Tenant
      tags:
      - auth
  /tenant/slug/{slug}:
    get:
      description: Get tenant by slug
      parameters:
      - description: Tenant Slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tenants.Tenant'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get tenant by slug
      tags:
      - tenants
swagger: "2.0"

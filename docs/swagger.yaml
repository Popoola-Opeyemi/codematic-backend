basePath: /
definitions:
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
      tenant_id:
        type: string
    required:
    - email
    - password
    type: object
  auth.SignupRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 8
        type: string
      phone:
        type: string
      tenant_id:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone
    type: object
  model.ErrorResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  tenants.CreateTenantRequest:
    properties:
      id:
        type: string
      slug:
        type: string
      webhook_url:
        type: string
    required:
    - id
    - slug
    type: object
  tenants.Tenant:
    properties:
      id:
        type: string
      name:
        type: string
      slug:
        type: string
      webhook_url:
        type: string
    type: object
  transactions.Transaction:
    properties:
      amount:
        type: number
      created_at:
        type: string
      currency_code:
        type: string
      error_reason:
        type: string
      fee:
        type: number
      id:
        type: string
      metadata:
        additionalProperties: true
        type: object
      provider_id:
        type: string
      reference:
        type: string
      status:
        type: string
      tenant_id:
        type: string
      type:
        type: string
      updated_at:
        type: string
      wallet_id:
        type: string
    type: object
  wallet.Transaction:
    properties:
      amount:
        type: number
      created_at:
        type: string
      currency_code:
        type: string
      error:
        type: string
      fee:
        type: number
      id:
        type: string
      metadata:
        additionalProperties: true
        type: object
      provider:
        type: string
      reference:
        type: string
      status:
        type: string
      tenant_id:
        type: string
      type:
        type: string
      updated_at:
        type: string
      wallet_id:
        type: string
    type: object
host: localhost:9082
info:
  contact:
    email: code.popoola@gmail.com
    name: API Support
  description: This is the Codematic API documentation.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Codematic API
  version: "1.0"
paths:
  /auth/admin:
    post:
      consumes:
      - application/json
      description: Authenticates a platform admin and returns tokens
      parameters:
      - description: Login request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Login a platform admin
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a tenant user and returns tokens. TenantID must be
        provided in the request body.
      parameters:
      - description: Login request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Login a tenant user (regular or tenant admin)
      tags:
      - auth
  /auth/me:
    get:
      description: Returns details of the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get current authenticated user
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Creates a new user account
      parameters:
      - description: Signup request
        in: body
        name: signupRequest
        required: true
        schema:
          $ref: '#/definitions/auth.SignupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema: {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /tenant:
    get:
      description: List all tenants
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tenants.Tenant'
            type: array
      summary: List tenants
      tags:
      - tenants
  /tenant/{id}:
    delete:
      description: Delete tenant by ID
      parameters:
      - description: Tenant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Delete tenant
      tags:
      - tenants
    get:
      description: Get tenant by ID
      parameters:
      - description: Tenant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tenants.Tenant'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get tenant by ID
      tags:
      - tenants
    put:
      consumes:
      - application/json
      description: Update tenant by ID
      parameters:
      - description: Tenant ID
        in: path
        name: id
        required: true
        type: string
      - description: Tenant update payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/tenants.CreateTenantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tenants.Tenant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Update tenant
      tags:
      - tenants
  /tenant/create:
    post:
      consumes:
      - application/json
      description: Creates a new Tenant
      parameters:
      - description: Tenant creation payload
        in: body
        name: tenantsCreateRequest
        required: true
        schema:
          $ref: '#/definitions/tenants.CreateTenantRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/tenants.Tenant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Creates a new Tenant
      tags:
      - auth
  /tenant/slug/{slug}:
    get:
      description: Get tenant by slug
      parameters:
      - description: Tenant Slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tenants.Tenant'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get tenant by slug
      tags:
      - tenants
  /transactions:
    get:
      consumes:
      - application/json
      description: Lists transactions with access control and optional filters
      parameters:
      - description: Transaction status filter
        in: query
        name: status
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/transactions.Transaction'
              type: array
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List transactions
      tags:
      - transactions
  /transactions/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves a single transaction by ID with access control
      parameters:
      - description: Transaction ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transactions.Transaction'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a single transaction
      tags:
      - transactions
  /wallet/{wallet_id}/balance:
    get:
      consumes:
      - application/json
      description: Retrieves the balance of a wallet
      parameters:
      - description: Wallet ID
        in: path
        name: wallet_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get wallet balance
      tags:
      - wallet
  /wallet/{wallet_id}/transactions:
    get:
      consumes:
      - application/json
      description: Retrieves the transaction history for a wallet
      parameters:
      - description: Wallet ID
        in: path
        name: wallet_id
        required: true
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/wallet.Transaction'
              type: array
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get wallet transactions
      tags:
      - wallet
  /wallet/transfer:
    post:
      consumes:
      - application/json
      description: Transfers a specified amount from one wallet to another
      parameters:
      - description: Transfer request
        in: body
        name: transferRequest
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Transfer funds between wallets
      tags:
      - wallet
  /wallet/withdraw:
    post:
      consumes:
      - application/json
      description: Withdraws a specified amount from the user's wallet
      parameters:
      - description: Withdraw request
        in: body
        name: withdrawRequest
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Withdraw funds from a wallet
      tags:
      - wallet
  /webhook/{provider}:
    post:
      consumes:
      - application/json
      description: Processes webhook events from any payment provider
      parameters:
      - description: Provider code
        in: path
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Handle provider webhook
      tags:
      - webhook
swagger: "2.0"
